# Generated by Django 2.0.4 on 2019-09-02 16:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_interface', models.CharField(max_length=45)),
                ('management_address', models.CharField(max_length=45)),
                ('username', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=45)),
                ('enable_secret', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(choices=[('EF', 'EF'), ('AF43', 'AF43'), ('AF42', 'AF42'), ('AF41', 'AF41'), ('AF33', 'AF33'), ('AF32', 'AF32'), ('AF23', 'AF23'), ('AF21', 'AF21')], max_length=20)),
                ('source', models.CharField(max_length=45)),
                ('destination', models.CharField(max_length=45)),
                ('begin_time', models.CharField(max_length=45)),
                ('end_time', models.CharField(max_length=45)),
                ('protocol_type', models.CharField(choices=[('ip', 'ip'), ('tcp', 'tcp'), ('udp', 'udp')], default='ip', max_length=45)),
                ('port_number', models.CharField(max_length=45)),
                ('custom_name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('match', models.CharField(max_length=45)),
                ('recommended_dscp', models.CharField(max_length=45)),
                ('delay_ref', models.IntegerField()),
                ('loss_ref', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=45)),
                ('management', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Access')),
            ],
        ),
        migrations.CreateModel(
            name='Dscp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dscp_value', models.CharField(max_length=45)),
                ('drop_min', models.CharField(max_length=45)),
                ('drop_max', models.CharField(max_length=45)),
                ('denominator', models.CharField(max_length=45)),
                ('drop_min_old', models.CharField(max_length=45)),
                ('drop_max_old', models.CharField(max_length=45)),
                ('drop_min_new', models.CharField(max_length=45)),
                ('drop_max_new', models.CharField(max_length=45)),
                ('delay', models.IntegerField(default=400, null=True)),
                ('loss', models.IntegerField(default=20, null=True)),
                ('ratio', models.IntegerField(default=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('priority', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface_name', models.CharField(max_length=45)),
                ('ingress', models.BooleanField(default=False)),
                ('egress', models.BooleanField(default=False)),
                ('wan', models.BooleanField(default=False)),
                ('device_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Device')),
            ],
        ),
        migrations.CreateModel(
            name='Policing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cir', models.CharField(max_length=45)),
                ('pir', models.CharField(max_length=45)),
                ('dscp_transmit', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': 'this name is in used'}, max_length=45, unique=True)),
                ('description', models.CharField(max_length=45)),
                ('enable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PolicyIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Policy')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Policy')),
            ],
        ),
        migrations.CreateModel(
            name='RegroupementClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bandwidth', models.CharField(max_length=45)),
                ('priority', models.CharField(max_length=45)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Group')),
                ('policing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Policing')),
                ('policy_out', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.PolicyOut')),
            ],
        ),
        migrations.CreateModel(
            name='Shaping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peak', models.CharField(max_length=45)),
                ('average', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Topology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topology_name', models.CharField(max_length=45)),
                ('topology_desc', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='TuningHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Dscp')),
            ],
        ),
        migrations.AddField(
            model_name='regroupementclass',
            name='shaping',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Shaping'),
        ),
        migrations.AddField(
            model_name='interface',
            name='policy_out_ref',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.PolicyOut'),
        ),
        migrations.AddField(
            model_name='group',
            name='policy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Policy'),
        ),
        migrations.AddField(
            model_name='dscp',
            name='regroupement_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.RegroupementClass'),
        ),
        migrations.AddField(
            model_name='device',
            name='policy_ref',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Policy'),
        ),
        migrations.AddField(
            model_name='device',
            name='topology_ref',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Topology'),
        ),
        migrations.AddField(
            model_name='businessapp',
            name='business_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.BusinessType'),
        ),
        migrations.AddField(
            model_name='application',
            name='business_app',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.BusinessApp'),
        ),
        migrations.AddField(
            model_name='application',
            name='business_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.BusinessType'),
        ),
        migrations.AddField(
            model_name='application',
            name='dscp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Dscp'),
        ),
        migrations.AddField(
            model_name='application',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.Group'),
        ),
        migrations.AddField(
            model_name='application',
            name='policy_in',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QoSmanager.PolicyIn'),
        ),
    ]
